#+Title: Different Tries
#+Author: Tikhon Jelvis
#+Email: tikhon@jelv.is

#+OPTIONS: reveal_center:t reveal_progress:nil reveal_history:t reveal_control:nil
#+OPTIONS: reveal_mathjax:t reveal_rolling_links:t reveal_keyboard:t reveal_overview:t num:nil
#+OPTIONS: reveal_width:1200 reveal_height:800 reveal_rolling_links:nil
#+OPTIONS: toc:nil
#+REVEAL_MARGIN: 0.1
#+REVEAL_MIN_SCALE: 0.5
#+REVEAL_MAX_SCALE: 2.5
#+REVEAL_TRANS: slide
#+REVEAL_THEME: tikhon
#+REVEAL_HLEVEL: 2
#+REVEAL_HEAD_PREAMBLE: <meta name="description" content="An overview of tries (or radix trees) in Haskell, focusing on the PATRICIA trie used by Data.IntMap.">
#+REVEAL_POSTAMBLE: <p> Created by Tikhon Jelvis. </p>
#+REVEAL_PLUGINS: (highlight markdown notes)
#+REVEAL_MATHJAX_URL: mathjax/MathJax.js?config=TeX-AMS_SVG

* Tries
  - key-value map
    - simple
    - persistent
    - fast

* Re/*trie*/val

* Also Called
  - digital trees
  - prefix trees
  - radix trees

* Tries
  - basic trie
  - PATRICIA trie: =Data.IntMap=
  - variations
    - branching factor
    - (Persistent) Adaptive Radix Tree

* Example
  [[./tree.svg]]

* lookup “b”
  [[./b.svg]]
  - b = 1

* lookup “bab”
  [[./b.svg]]
  - b

* lookup “bab”
  [[./b→ba.svg]]
  - b → a

* lookup “bab”
  [[./b→ba→bab.svg]]
  - b → a → b = 7

* 
#+BEGIN_SRC haskell
data Trie a = 
  Node (Maybe a) [(Char, Trie a)]

lookup :: String → Trie a → Maybe a

insert :: String → a → Trie a → Trie a
#+END_SRC

* Prefixes
  - every key starting with “ba”
  [[./b→ba.svg]]

* Prefixes
  [[./prefix-ba.svg]]

* PATRICIA
  #+ATTR_REVEAL: :frag roll-in
  Practical Algorithm to Retrieve Information Coded in Alphanumeric

  - developed in /1968/

* Okasaki and Gill, 1998
    [[./okasaki.png]]
